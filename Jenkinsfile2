node {
  def app
  stage('SCM') {
    checkout scm
  }
  stage('Build Jar') {
    def mvn = tool 'maven';
    sh "${mvn}/bin/mvn clean install"
  }
  stage('SonarQube Analysis') {
    def mvn = tool 'maven';
    withSonarQubeEnv() {
      sh '''$SCANNER_HOME/bin/sonar-scanner \
         -Dsonar.projectKey=firms \
         -Dsonar.projectName=Firm Management App \
         -Dsonar.login=sqa_ec2d04f2710021221c9709bcac4be130c91b5436
         -Dsonar.sources=src/ \
         -Dsonar.java.binaries=target/classes/ \
         -Dsonar.exclusions=src/test/java/****/*.java \
         -Dsonar.projectVersion=${BUILD_NUMBER}-${GIT_COMMIT_SHORT}'''
    }
  }

  stage('OWASP Vulnerability SCAN') {
      dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
      dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
  }

  stage('Build Docker Image') {
    sh 'docker build -t firm -f Dockerfile1.txt .'
  }

  stage('Start Docker container') {
    sh 'docker ps -f name=firms -q | xargs --no-run-if-empty docker container stop'
    sh 'docker container ls -a -fname=firms -q | xargs -r docker container rm'
    sh 'docker run -d --name firm -p 8081:8081 firm:latest'
  }

  stage('Scan security vulnerabilities') {

  }
}